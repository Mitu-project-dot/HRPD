<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

  <!-- Lifetime manager types should be inserted
        if you need lifetime managers -->
  <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
  <alias alias="external"	type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
  <!-- User defined type aliases -->
  <alias alias="IPersistence" type="Chevron.HRPD.Common.Interfaces.IPersistence`1, Chevron.HRPD.Common" />
  <alias alias="BasePersistence" type="Chevron.HRPD.DataAccess.EntLib.BasePersistence`1, Chevron.HRPD.DataAccess.EntLib" />
  <container>
    <register type="IPersistence[]" mapTo="BasePersistence[]"/>
  </container>
</unity>
<!--
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">-->

<!-- Lifetime manager types should be inserted
        if you need lifetime managers -->
<!--<alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
  <alias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />-->
<!-- User defined type aliases -->
<!--<alias alias="IPersistence" type="Chevron.HRPD.Common.Interfaces.IPersistence`1, Chevron.HRPD.Common" />
  <alias alias="BasePersistence" type="Chevron.HRPD.DataAccess.EntityFramework.BasePersistence`1, Chevron.HRPD.DataAccess.EntityFramework" />
  <container>
    <register type="IPersistence[]" mapTo="BasePersistence[]"/>
  </container>
</unity>
-->